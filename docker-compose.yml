version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    restart: unless-stopped
    networks:
      - crm-network
    depends_on:
      - supabase-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      bash -c "
        python setup_supabase.py --schema-only &&
        uvicorn main:app --host 0.0.0.0 --port 8000
      "

  # Placeholder for frontend (will be added in future)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #   env_file:
  #     - ./frontend/.env
  #   restart: unless-stopped
  #   networks:
  #     - crm-network
  #   depends_on:
  #     - backend

  # Local development Supabase (optional - can use cloud Supabase instead)
  supabase-db:
    image: supabase/postgres:14.1.0
    ports:
      - "5432:5432"
    volumes:
      - supabase-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase API service
  supabase-api:
    image: supabase/postgres-meta:latest
    depends_on:
      - supabase-db
    restart: unless-stopped
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: supabase-db
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: postgres
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: postgres
    ports:
      - "8080:8080"
    networks:
      - crm-network

  # Supabase Auth service
  supabase-auth:
    image: supabase/gotrue:latest
    depends_on:
      - supabase-db
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:postgres@supabase-db:5432/postgres?sslmode=disable
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_DISABLE_SIGNUP: "false"
    ports:
      - "9999:9999"
    networks:
      - crm-network

networks:
  crm-network:
    driver: bridge

volumes:
  supabase-data: 