from fastapi import Depends, HTTPException
from fastapi.security import OAuth2PasswordBearer
from typing import Optional

# Add this at the top of the file
oauth2_scheme_optional = OAuth2PasswordBearer(tokenUrl=f"{settings.API_V1_STR}/auth/login", auto_error=False)

async def get_optional_user(token: str = Depends(oauth2_scheme_optional)) -> Optional[User]:
    """
    Get the current user if a valid token is provided, otherwise return None.
    This is used for endpoints that can be accessed by both authenticated and anonymous users.
    """
    if not token:
        return None
    
    try:
        return await get_current_active_user(token)
    except HTTPException:
        return None 